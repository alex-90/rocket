<?php

namespace Tests\Feature;

use Database\Seeders\ItemSeeder;
use Database\Seeders\OptionSeeder;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Illuminate\Testing\AssertableJsonString;
use Illuminate\Testing\Fluent\AssertableJson;
use Tests\TestCase;

class ApiTest extends TestCase
{
    use RefreshDatabase;

    public $url;
    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->seed(ItemSeeder::class);
        $this->seed(OptionSeeder::class);

//        $url = $this->url = "products?properties[свойство1][]=значение1_своства1&properties[свойство1][]=значение2_своства1&properties[свойство2][]=значение1_свойства2";

        $url = $this->url = "products";
    }

    /**
     * A basic feature test example.
     */
    public function test_any_request(): void
    {
        $this->withoutExceptionHandling();

        $response = $this->get('/api/' . $this->url);

        $response->assertStatus(200);

        $response->assertJsonIsArray();

        $response->assertJson(function (AssertableJson $json) {

            $arr = $json->toArray();
            $count = count($arr);

            if ($count > 40) {
                $this->fail('More than 40');
            } else {

            }

        });

    }
}
